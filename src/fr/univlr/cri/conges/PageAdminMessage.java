package fr.univlr.cri.conges;
// Generated by the WOLips TemplateEngine Plug-in at ${WOLipsContext.getDate()}

import com.webobjects.appserver.*;
import com.webobjects.foundation.NSArray;

import fr.univlr.cri.conges.YCRIWebPage;
import fr.univlr.cri.conges.eos.modele.conges.EOMessage;
import fr.univlr.cri.ycrifwk.utils.UtilDb;
import fr.univlr.cri.webext.*;

public class PageAdminMessage extends YCRIWebPage {

    private NSArray lesMessages;
    public EOMessage unMessage, leMessageEnCours;

    public boolean isModeModif;
    public boolean isModeAjout;
    
    public PageAdminMessage(WOContext context) {
        super(context);
    }
    
    // DONNEES
    public NSArray lesMessages() {
        if (lesMessages == null) {
            lesMessages = EOMessage.findAllMessagesInContext(edc);
        }
        return lesMessages;
    }
    
    
    
    // MANIP DONNEEES

	/**
	 * La classe interne
	 */	 
	public class SupprimerResponder implements CRIAlertResponder {
		
			public SupprimerResponder() {
			
		}
		
		public WOComponent respondToButton(int buttonNo) {
			switch (buttonNo) {
				case 1: 
					toutDesactiver();
					edc.deleteObject(unMessage);
					try {
						enregistrer();
					} catch (Throwable e) {
						e.printStackTrace();
					}
					return PageAdminMessage.this.parent().parent();
				case 2:  
					toutDesactiver();
					return PageAdminMessage.this.parent().parent();
				default: return neFaitRien();
			}
		}
	} 
    
    public WOComponent supprimerUnMessage() {
		// page de confirmation
		SupprimerResponder responder = new SupprimerResponder();
		return CRIAlertPage.newAlertPageWithResponder(this, "Suppression de message<br>",
			"<center>Confirmation de l'op&eacute;ration:<br><br>"+
			"Etes vous sur de vouloir supprimer le message '"+ unMessage.mesTitre()+"' ?",
			"Confirmer", "Annuler", null, CRIAlertPage.QUESTION, responder);
    }
    
    public WOComponent modifierUnMessage() {
        activerModeModif();
        leMessageEnCours = unMessage;
        return neFaitRien();
    }
    
    public WOComponent ajouterUnMessage() {
        activerModeAjout();
        leMessageEnCours = new EOMessage();
        leMessageEnCours.setMesDateDebut(laSession.dateRef());
        leMessageEnCours.setMesDateFin(laSession.dateRef());
        leMessageEnCours.setMesTitre("Titre du message");
        leMessageEnCours.setMesContenu("Contenu du message");
        return neFaitRien();        
    }
    
    public WOComponent enregistrer() throws Throwable {
        if (!edc.registeredObjects().containsObject(leMessageEnCours)) {
            edc.insertObject(leMessageEnCours);
        }
        UtilDb.save(edc, true);
        toutDesactiver();
        lesMessages = null;
        return neFaitRien();
    }
    
    // CHANGEMENTS DE MODES
    
    private void activerModeModif() {
        toutDesactiver();
        isModeAjout = true;
    }

    private void activerModeAjout() {
        toutDesactiver();
        isModeModif = true;
    }

    private void toutDesactiver() {
        isModeModif = isModeAjout = false;
    }

    
    // TEMOINS D INTERFACE
    public boolean showDetailMessage() {
        return isModeAjout || isModeModif;
    }
    
}