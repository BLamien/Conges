package fr.univlr.cri.conges;
// Generated by the WOLips TemplateEngine Plug-in at 7 sept. 2005 10:48:59

import com.webobjects.appserver.*;
import com.webobjects.eoaccess.EOAttribute;
import com.webobjects.eoaccess.EOEntity;
import com.webobjects.eoaccess.EOModelGroup;
import com.webobjects.eocontrol.EOSortOrdering;
import com.webobjects.foundation.NSArray;
import com.webobjects.foundation.NSData;
import com.webobjects.foundation.NSTimestamp;

import fr.univlr.cri.conges.YCRIWebPage;
import fr.univlr.cri.conges.eos.modele.grhum.EOStructure;
import fr.univlr.cri.conges.eos.modele.planning.EOVIndividuConges;
import fr.univlr.cri.conges.utils.DateCtrlConges;
import fr.univlr.cri.util.ArrayCtrl;
import fr.univlr.cri.webapp.LRDataResponse;
import fr.univlr.cri.webapp.LRSort;

public class PageAdminLogs extends YCRIWebPage {
  
	public WODisplayGroup leDisplayGroupVueIndividuConges;
	public EOStructure uneStructure;
	public EOVIndividuConges unRecord;
  public NSTimestamp unDteDebutAnnee;
  public EOAttribute unAttribut, lAttributSelectionne;

  public NSArray lesDteDebutAnnee;
  public NSArray lesStructure;
  public NSArray lesAttributs;
  
  public String leNomUsuel, lePrenom;
  
  public PageAdminLogs(WOContext context) {
    super(context);
    initComponent();
  }
  
  private void initComponent() {
  	//
    lesDteDebutAnnee = LRSort.sortedArray(lesRecordsVIndividuConges(), EOVIndividuConges.DTE_DEBUT_ANNEE_KEY);
    lesDteDebutAnnee = (NSArray) lesDteDebutAnnee.valueForKey(EOVIndividuConges.DTE_DEBUT_ANNEE_KEY);
    lesDteDebutAnnee = ArrayCtrl.removeDoublons(lesDteDebutAnnee);
    // 
    lesStructure = (NSArray) lesRecordsVIndividuConges().valueForKey(EOVIndividuConges.TO_STRUCTURE_KEY);
    lesStructure = ArrayCtrl.removeDoublons(lesStructure);
    lesStructure = LRSort.sortedArray(lesStructure, EOStructure.DISPLAY_KEY);
    //
    EOEntity entityVIndividuConges = EOModelGroup.defaultGroup().entityNamed(EOVIndividuConges.ENTITY_NAME);
    lesAttributs = entityVIndividuConges.attributes();
  }
  
  // CACHE

  private NSArray lesRecordsVIndividuConges() {
  	return EOVIndividuConges.fetchAllVIndividuCongeses(edc);
  }
   
  
  // DISPLAY
  
  
  public String displayUneDteDebutAnnee() {
    return DateCtrlConges.dateToString(unDteDebutAnnee);
  } 
  
  public String displayCngInitial() {
    return DateCtrlConges.to_duree(unRecord.cngInitial().intValue());
  }
  
  public String displayCngFinal() {
    return DateCtrlConges.to_duree(unRecord.cngFinal().intValue());
  }

  public String displayRegulation() {
    return DateCtrlConges.to_duree(unRecord.regulation().intValue());
  }
  
  
  // SETTERS
  
  public void setLeNomUsuel(String value) {
    leNomUsuel = value;
    if (value != null) {
      value = "*" + value.toUpperCase() + "*";
      leDisplayGroupVueIndividuConges.queryBindings().setObjectForKey(value, "leNomUsuel");
    }
    else {
      leDisplayGroupVueIndividuConges.queryBindings().removeObjectForKey("leNomUsuel");      
    }
  }
  
  public void setLePrenom(String value) {
    lePrenom = value;
    if (value != null) {
      value = "*" + value.toUpperCase() + "*";
      leDisplayGroupVueIndividuConges.queryBindings().setObjectForKey(value, "lePrenom");
    }
    else {
      leDisplayGroupVueIndividuConges.queryBindings().removeObjectForKey("lePrenom");      
    }
  }
  
  public void setLAttributSelectionne(EOAttribute value) {
    lAttributSelectionne = value;
    if (leDisplayGroupVueIndividuConges != null) {
		  if (lAttributSelectionne != null) {
		    leDisplayGroupVueIndividuConges.setSortOrderings(new NSArray(EOSortOrdering.sortOrderingWithKey(lAttributSelectionne.name(), EOSortOrdering.CompareAscending)));
		  }
		  else {
		    leDisplayGroupVueIndividuConges.setSortOrderings(new NSArray());		    
		  }
    }
  }
  
  // export CSV
  
	/** encodage du fichier cvs genere pour avoir un affichage correct des accents sous windows */
	private final static String CSV_ENCODING = "ISO-8859-1";
	private final static String CSV_COLUMN_SEPARATOR = "\t";
	private final static String CSV_NEW_LINE = "\n";
	
	/**
	 * 
	 */
	public WOResponse printCsv() {
  	LRDataResponse resp = new LRDataResponse();
  	StringBuffer sb = new StringBuffer();
  	//
  	for (int i = 0; i < leDisplayGroupVueIndividuConges.displayedObjects().count(); i++) {
  		EOVIndividuConges vIndividuConges = (EOVIndividuConges) leDisplayGroupVueIndividuConges.displayedObjects().objectAtIndex(i);

   		sb.append(vIndividuConges.nomUsuel()).append(CSV_COLUMN_SEPARATOR);
   		sb.append(vIndividuConges.prenom()).append(CSV_COLUMN_SEPARATOR);
   		sb.append(vIndividuConges.lcStructure()).append(CSV_COLUMN_SEPARATOR);
   		sb.append(DateCtrlConges.dateToString(vIndividuConges.dteDebutAnnee())).append(CSV_COLUMN_SEPARATOR);
   		String strDDebAffectation = "";
   		if (vIndividuConges.dDebAffectation() != null) {
   			strDDebAffectation = DateCtrlConges.dateToString(vIndividuConges.dDebAffectation());
   		}
   		sb.append(strDDebAffectation).append(CSV_COLUMN_SEPARATOR);
   		String strDFinAffectation = "";
   		if (vIndividuConges.dFinAffectation() != null) {
   			strDFinAffectation = DateCtrlConges.dateToString(vIndividuConges.dFinAffectation());
   		}
   		sb.append(strDFinAffectation).append(CSV_COLUMN_SEPARATOR);
   		sb.append(DateCtrlConges.to_duree(vIndividuConges.toAffectationAnnuelle().reliquatInitialEnMinutes())).append(CSV_COLUMN_SEPARATOR);
   		sb.append(DateCtrlConges.to_duree(vIndividuConges.cngInitial().intValue())).append(CSV_COLUMN_SEPARATOR);
   		sb.append(DateCtrlConges.to_duree(vIndividuConges.cngFinal().intValue())).append(CSV_COLUMN_SEPARATOR);
   		sb.append(DateCtrlConges.to_duree(vIndividuConges.regulation().intValue())).append(CSV_COLUMN_SEPARATOR);
   		
  		sb.append(CSV_NEW_LINE);
  		
		}
  	// remettre le DG comme précédemment
 	NSData stream = new NSData(sb.toString(), CSV_ENCODING);
  	resp.setContent(stream);
		resp.setContentEncoding(CSV_ENCODING);		
  	resp.setHeader(String.valueOf(stream.length()), "Content-Length");
  	resp.setFileName("logs.csv");
  	return resp;
	}
}